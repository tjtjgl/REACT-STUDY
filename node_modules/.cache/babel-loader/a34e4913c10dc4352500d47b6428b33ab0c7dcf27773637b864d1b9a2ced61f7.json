{"ast":null,"code":"var _jsxFileName = \"/Users/seohee/Desktop/VScode/React/react-kh/src/Uredec.js\",\n  _s = $RefreshSig$();\n/* \nuseReducer : state가 너무 많아지거나 부모와 자식관계가 복잡한 경우 관리를 해줘 빠르게 작업할 수 있게 도와주는 Hook\n\ndispatch가 reducer룰 호출함, reducer는 저장소를 가서 현재 state 값을 가져옴 그리고 새로운 state를 반환해줌\n\ncomponent -> (dispatch)-Action -> Store에서 Reducer 가져옴\n\ndispatch({type:'값',data:'변경값'})\n\n*/\n\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Count() {\n  _s();\n  const [number, setNumber] = useReducer(0); //(reducer,0);\n  const onPlus = () => {\n    dispatch({\n      typpe: 'INCREMENT'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Count, \"jnpxdrBqbB+zA5zMj9HigWXSesM=\");\n_c = Count;\nexport default function Uredec() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Uredec;\nvar _c, _c2;\n$RefreshReg$(_c, \"Count\");\n$RefreshReg$(_c2, \"Uredec\");","map":{"version":3,"names":["useReducer","jsxDEV","_jsxDEV","Count","_s","number","setNumber","onPlus","dispatch","typpe","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Uredec","_c2","$RefreshReg$"],"sources":["/Users/seohee/Desktop/VScode/React/react-kh/src/Uredec.js"],"sourcesContent":["/* \nuseReducer : state가 너무 많아지거나 부모와 자식관계가 복잡한 경우 관리를 해줘 빠르게 작업할 수 있게 도와주는 Hook\n\ndispatch가 reducer룰 호출함, reducer는 저장소를 가서 현재 state 값을 가져옴 그리고 새로운 state를 반환해줌\n\ncomponent -> (dispatch)-Action -> Store에서 Reducer 가져옴\n\ndispatch({type:'값',data:'변경값'})\n\n*/\n\nimport { useReducer } from \"react\";\n\nfunction Count() {\n  const [number, setNumber] = useReducer(0); //(reducer,0);\n  const onPlus =()=>{\n    dispatch({typpe:'INCREMENT'});\n  }\n\n  return (\n    <div>\n        <h2>{number}</h2>\n      <button> + </button>\n      <button> - </button>\n    </div>\n  );\n}\n\nexport default function Uredec() {\n  return <div></div>;\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,MAAMO,MAAM,GAAEA,CAAA,KAAI;IAChBC,QAAQ,CAAC;MAACC,KAAK,EAAC;IAAW,CAAC,CAAC;EAC/B,CAAC;EAED,oBACEP,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAAQ,QAAA,EAAKL;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBZ,OAAA;MAAAQ,QAAA,EAAQ;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpBZ,OAAA;MAAAQ,QAAA,EAAQ;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAACV,EAAA,CAbQD,KAAK;AAAAY,EAAA,GAALZ,KAAK;AAed,eAAe,SAASa,MAAMA,CAAA,EAAG;EAC/B,oBAAOd,OAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACpB;AAACG,GAAA,GAFuBD,MAAM;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}