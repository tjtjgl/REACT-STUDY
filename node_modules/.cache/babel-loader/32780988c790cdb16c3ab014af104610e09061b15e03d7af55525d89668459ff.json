{"ast":null,"code":"var _jsxFileName = \"/Users/seohee/Desktop/VScode/React/react-kh/src/Uredec.js\",\n  _s = $RefreshSig$();\n/* \nuseReducer : state가 너무 많아지거나 부모와 자식관계가 복잡한 경우 관리를 해줘 빠르게 작업할 수 있게 도와주는 Hook\n\ndispatch가 reducer룰 호출함, reducer는 저장소를 가서 현재 state 값을 가져옴 그리고 새로운 state를 반환해줌\n\ncomponent -> (dispatch)-Action -> Store에서 Reducer 가져옴\n\ndispatch({type:'값'})\ndispatch({type:'값',data:'변경값'})\n\n*/\n\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      break;\n  }\n}\nexport default function Count() {\n  _s();\n  const [number, setNumber] = useReducer(0); //(reducer,0);\n\n  const onPlus = () => {\n    dispatch({\n      type: 'INCREMENT'\n    });\n  };\n  const onMinus = () => {\n    dispatch({\n      type: 'DECREMENT'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Count, \"jnpxdrBqbB+zA5zMj9HigWXSesM=\");\n_c = Count;\nvar _c;\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"names":["useReducer","jsxDEV","_jsxDEV","reducer","state","action","type","Count","_s","number","setNumber","onPlus","dispatch","onMinus","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seohee/Desktop/VScode/React/react-kh/src/Uredec.js"],"sourcesContent":["/* \nuseReducer : state가 너무 많아지거나 부모와 자식관계가 복잡한 경우 관리를 해줘 빠르게 작업할 수 있게 도와주는 Hook\n\ndispatch가 reducer룰 호출함, reducer는 저장소를 가서 현재 state 값을 가져옴 그리고 새로운 state를 반환해줌\n\ncomponent -> (dispatch)-Action -> Store에서 Reducer 가져옴\n\ndispatch({type:'값'})\ndispatch({type:'값',data:'변경값'})\n\n*/\n\nimport { useReducer } from \"react\";\n\nfunction reducer(state,action){\n    switch(action.type){\n        case 'INCREMENT':\n            break;\n\n\n    }\n\n}\n\nexport default function Count() {\n  const [number, setNumber] = useReducer(0); //(reducer,0);\n  \n  const onPlus =()=>{\n    dispatch({type:'INCREMENT'});\n  }\n  const onMinus =()=>{\n    dispatch({type:'DECREMENT'});\n  }\n\n\n  return (\n    <div>\n        <h2>{number}</h2>\n      <button> + </button>\n      <button> - </button>\n    </div>\n  );\n}\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,OAAOA,CAACC,KAAK,EAACC,MAAM,EAAC;EAC1B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,WAAW;MACZ;EAGR;AAEJ;AAEA,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE3C,MAAMW,MAAM,GAAEA,CAAA,KAAI;IAChBC,QAAQ,CAAC;MAACN,IAAI,EAAC;IAAW,CAAC,CAAC;EAC9B,CAAC;EACD,MAAMO,OAAO,GAAEA,CAAA,KAAI;IACjBD,QAAQ,CAAC;MAACN,IAAI,EAAC;IAAW,CAAC,CAAC;EAC9B,CAAC;EAGD,oBACEJ,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAKL;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBhB,OAAA;MAAAY,QAAA,EAAQ;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpBhB,OAAA;MAAAY,QAAA,EAAQ;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAACV,EAAA,CAlBuBD,KAAK;AAAAY,EAAA,GAALZ,KAAK;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}